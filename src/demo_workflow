#!/usr/bin/env bash
#
#  Archivo de posici√≥n trampas
position_trap_file_name_xlsx=${1}
files_path=$(dirname ${position_trap_file_name_xlsx})
position_trap_file_name=$(basename ${position_trap_file_name_xlsx} .xlsx)
position_trap_data_file=${files_path}/${position_trap_file_name}
position_trap_cutted_data=${position_trap_data_file}_clean

# Archivo de morfometr√≠a
cat_morphometry_file_name_xlsx=${2}
cat_morphometry_data_path=$(dirname ${cat_morphometry_file_name_xlsx})
cat_morphometry_file_name=$(basename ${cat_morphometry_file_name_xlsx} .xlsx)
cat_morphometry_data_file=${cat_morphometry_data_path}/${cat_morphometry_file_name}

# Archivo datapackage.json
datapackage_validation_file="posicion_trampas_gatos_ig"
dtp_src="data/validacion_datapackage"

src_path="src"
errors_directory=${files_path}/errores
mkdir --parents ${errors_directory}

# Revisi√≥n estructural de la tabla posici√≥n trampa
# 1. Convertir archivos XLSX a CSV
	source ./src/clean_position_morphometry.sh 
    clean_position ${position_trap_file_name_xlsx} 

#	./src/clean_xlsx_2_csv.sh ${position_trap_file_name_xlsx} ${number_columns_position}
# 2. Selecciona solamente columnas necesarias
	./src/select_needed_columns.sh ${position_trap_data_file}.csv > ${position_trap_cutted_data}.csv

# 2. Encontrar duplicados
	echo "BUSCANDO DUPLICADOS"
	${src_path}/distinct_position_traps ${position_trap_cutted_data}.csv > ${errors_directory}/duplicados_${position_trap_file_name}.csv

# 3. Revisar nombres de las columnas
	echo "REVISANDO EL ENCABEZADO"
	${src_path}/make_check_header.R --data ${position_trap_cutted_data}.csv

# 3.1 Revisar intervalo de fechas
	python -m src.check_date_interval --input "${files_path}" --input "${position_trap_file_name}"

# 4. Validacion con datapackage
	#Cambiamos el encabezado del archivo CSV para correr en la carpeta 'validacion_datapackage' el goodtables
	${src_path}/change_header ${position_trap_cutted_data}.csv \
		> ${dtp_src}/${datapackage_validation_file}.csv
	# Corre goodtables en la carpeta 'validacion_datapackage'
	echo "VERIFICACI√ìN ESTRUCTURAL"
	goodtables ${dtp_src}/datapackage.json > ${errors_directory}/errores_estructurales_${position_trap_file_name}.txt

# Revisa y compara las capturas de los archivos posici√≥n trampas y morfometr√≠a gatos
# 5. Hacerlos tidy (feature/agrega_script_con_cli)
	echo "CONVIERTE TABLA A FORMATO TIDY Y CAMBIA FORMATO DE FECHA"
	src/make_table_tidy.R \
		--data ${position_trap_cutted_data}.csv \
		--salida ${position_trap_data_file}_tidy.csv \
	&& cambia_formato_fecha ${position_trap_data_file}_tidy.csv \
		> ${position_trap_data_file}_ISO8601.csv

# 6. Limpiar archivos
# 6.1 Morfometr√≠a
# Convierte archivo de morfometr√≠a_gatos de xslx a csv
	echo "CONVIERTE ARCHIVO DE MORFOMETRIA DE XLSX A CSV"
	source ./src/clean_position_morphometry.sh 
    clean_morphometry ${cat_morphometry_file_name_xlsx} 
	row_number=$(wc -l < ${cat_morphometry_data_file}.csv)
	if [ $row_number -gt 1 ];
	then
	cambia_formato_fecha ${cat_morphometry_data_file}.csv \
		> ${cat_morphometry_data_file}_ISO8601.csv
	else 
	echo "NO HAY CAPTURAS"
	echo "üßê El resultado de esta verificaci√≥n los podemos ver a detalle en la carpeta \`errores\` que se genera dentro de nuestra carpeta de datos üóÉÔ∏è"
	exit $?
	fi

# Tiene que ser la salida de la funcion cambia formato_fecha (ISO8601)
	echo "SELECCIONA CAPTURAS DEL ARCHIVO MORFOMETR√çA GATOS"
	Rscript -e "diferenciasMorfometriaPosicionTrampas::write_cleaned_morphometry(geci.optparse::get_options())" \
	--data_path=${cat_morphometry_data_file}_ISO8601.csv \
	--output_path=${files_path}/cleaned_morphometry_cats.csv

# 6.2 Posici√≥n trampa
	echo "SELECCIONA CAPTURAS DEL ARCHIVO POSICI√ìN TRAMPAS"
	src/get_captures.R \
		--data=${position_trap_data_file}_ISO8601.csv \
		--out=${files_path}/cleaned_position_traps.csv

# 7. Comparar morfometr√≠a con posicion (Capturas que no est√°n en morfometr√≠a)
	echo "LAS CAPTURAS FALTANTES EN EL ARCHIVO DE MORFOMETR√çA EST√ÅN EN EL ARCHIVO missing_captures_in_morphometry"
	Rscript -e "diferenciasMorfometriaPosicionTrampas::write_diff_in_captures_between(geci.optparse::get_options())" \
		--left_data=${files_path}/cleaned_position_traps.csv \
		--right_data=${files_path}/cleaned_morphometry_cats.csv \
		--output_path=${errors_directory}/missing_captures_in_morphometry.csv

# 8. Comparar posicion con morfometr√≠a (Capturas que no est√°n en posici√≥n)
	echo "LAS CAPTURAS FALTANTES EN EL ARCHIVO DE MORFOMETR√çA EST√ÅN EN EL ARCHIVO missing_captures_in_morphometry"
	Rscript -e "diferenciasMorfometriaPosicionTrampas::write_diff_in_captures_between(geci.optparse::get_options())" \
		--left_data=${files_path}/cleaned_morphometry_cats.csv \
		--right_data=${files_path}/cleaned_position_traps.csv \
		--output_path=${errors_directory}/missing_captures_in_position.csv

	Rscript -e "diferenciasMorfometriaPosicionTrampas::write_morphometry_geci_format(geci.optparse::get_options())" \
		--data_path ${files_path}/cleaned_morphometry_cats.csv \
		--output_path ${files_path}/cleaned_morphometry_cats_geci_format.csv

	echo "üßê El resultado de esta verificaci√≥n los podemos ver a detalle en la carpeta \`errores\` que se genera dentro de nuestra carpeta de datos üóÉÔ∏è"
